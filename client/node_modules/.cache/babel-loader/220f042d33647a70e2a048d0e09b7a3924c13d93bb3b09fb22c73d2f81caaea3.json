{"ast":null,"code":"var _jsxFileName = \"/Users/meredith/Documents/Git_Folder/react-personal-portfolio/client/src/PortfolioContainer/Home/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  /* This set selectedScreen to be 0 */\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  /* if the screen passed in is in the array*/\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  /* subscribe to the observable */\n  let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this));\n  };\n  const getHeaderOptionsClasses = index => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return classes;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  useEffect(() => {\n    return () => {\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../../assets/Home/logo.png\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"ujF17CXvQfKrqR4WPi1qhAXORpE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","Screen","i","className","getHeaderOptionsClasses","onClick","switchScreen","children","screen_name","fileName","_jsxFileName","lineNumber","columnNumber","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior","unsubscribe","icon","src","alt","_c","$RefreshReg$"],"sources":["/Users/meredith/Documents/Git_Folder/react-personal-portfolio/client/src/PortfolioContainer/Home/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\n\nfunction Header() {\n    /* This set selectedScreen to be 0 */\n    const [selectedScreen, setSelectedScreen] = useState(0);\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n    /* if the screen passed in is in the array*/\n    const updateCurrentScreen = (currentScreen) => {\n        if (!currentScreen || !currentScreen.screenInView) return;\n\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n        if (screenIndex < 0) return;\n    };\n    /* subscribe to the observable */\n    let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n\n    const getHeaderOptions = () => {\n        return TOTAL_SCREENS.map((Screen, i) => (\n            <div key={Screen.screen_name} className={getHeaderOptionsClasses(i)} onClick={() => switchScreen(i, Screen)}>\n                <span>{Screen.screen_name}</span>\n            </div>\n        ));\n    };\n\n    const getHeaderOptionsClasses = (index) => {\n        let classes = \"header-option \";\n        if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n\n        if (selectedScreen === index) classes += \"selected-header-option \";\n\n        return classes;\n    };\n\n    const switchScreen = (index, screen) => {\n        let screenComponent = document.getElementById(screen.screen_name);\n        if (!screenComponent) return;\n\n        screenComponent.scrollIntoView({ behavior: \"smooth\" });\n        setSelectedScreen(index);\n        setShowHeaderOptions(false);\n    };\n\n    useEffect(() => {\n        return () => {\n            currentScreenSubscription.unsubscribe();\n        };\n    }, [currentScreenSubscription]);\n\n    return (\n        <div className=\"header-container\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n            <div className=\"header-parent\">\n                <div className=\"header-hamburger\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                    <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\n                </div>\n                <div className=\"header-logo\">\n                    <img src=\"../../assets/Home/logo.png\" alt=\"logo\" />\n                </div>\n                <div className={showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\"}>{getHeaderOptions()}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}